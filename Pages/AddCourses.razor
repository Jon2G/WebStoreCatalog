@page "/AddCourses"
@using WebStore.Models
<body  class="home">
	<!-- Fixed navbar -->
	
	<!-- /.navbar -->

	<Header/>

	<!-- container -->
	<div class="container add-padding">

		<ol class="breadcrumb">
			<li><a href="/">Home</a></li>
			<li class="active">About</li>
		</ol>

		<div class="row">
			
			<!-- Article main content -->
			<article class="col-sm-4 maincontent">
				<header class="page-header">
					<h1 class="page-title">Agregar nuevo curso</h1>
				</header>
				<p>
					<div>
						<p>
							<div class="top-margin">
									<label>Nombre del curso <span class="text-danger">*</span></label>
									<input type="text" class="form-control">
								</div>
						</p>
						<p>
							<div class="top-margin">
									<label>Costo del curso <span class="text-danger">*</span></label>
									<input type="text" class="form-control">
								</div>
						</p>
						<p>
							<div class="top-margin">
									<label>Descripcion<span class="text-danger">*</span></label>
									<input type="text" class="form-control">
								</div>
						</p>
						<p>
							<div class="top-margin">
									<label>Ingresa imagenes para el curso<span class="text-danger">*</span></label>
									<InputFile OnChange="OnInputFileChange" multiple />
									<div class="card" style="width:30rem;">
										<div class="card-body">
											<img class="rounded m-1" src="@imageDataFile" />
										</div>
									</div>
								</div>
							
						</p>
						<p>
							<div class="top-margin">
									<label>Descuento<span class="text-danger">*</span></label>
									<input type="text" class="form-control">
								</div>
						</p>
						<button class="btn btn-action" type="submit">Confirmar</button>
					</div>

				</p>
			</article>


		</div>
	</div>	
</body>
@code {

    private string imageDataFile="";
    private string name,description;
    private int cost, off;
    private Course course;
    private async Task OnInputFileChange(InputFileChangeEventArgs e)
    {
        var maxFile = 3;
        var format = "image/png";
        foreach(var imageFile in e.GetMultipleFiles())
        {
            var resizeFile = await imageFile.RequestImageFileAsync(format,200,200);
            var buffer = new byte[resizeFile.Size];
            await resizeFile.OpenReadStream().ReadAsync(buffer); 
             imageDataFile = $"data:{format};base64,{Convert.ToBase64String(buffer)}";
        }
    }
}
